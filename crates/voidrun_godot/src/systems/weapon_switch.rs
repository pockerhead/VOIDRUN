//! Weapon switch system ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –æ—Ä—É–∂–∏—è —á–µ—Ä–µ–∑ hotbar
//!
//! # Flow
//!
//! 1. PlayerInputController (Godot) ‚Üí WeaponSwitchEvent (Digit1-4 –¥–ª—è weapons)
//! 2. `process_player_weapon_switch` ‚Üí –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤ SwapActiveWeaponIntent (ECS)
//! 3. Equipment system (`process_weapon_swap`) ‚Üí –º–µ–Ω—è–µ—Ç active_slot + Attachment + WeaponStats
//! 4. `attach_prefabs_main_thread` ‚Üí –ø–æ–¥—Ö–≤–∞—Ç–∏—Ç Changed<Attachment> –∏ —Å–º–µ–Ω–∏—Ç –≤–∏–∑—É–∞–ª
//!
//! # Consumables
//! - Digit5-9 –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ `UseConsumableIntent` (Phase 5)

use bevy::prelude::*;
use voidrun_simulation::{Player, SwapActiveWeaponIntent};

use crate::input::WeaponSwitchEvent;

/// Process player weapon switch input (Godot ‚Üí ECS)
///
/// –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç WeaponSwitchEvent (Godot input) –≤ SwapActiveWeaponIntent (ECS).
///
/// # –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞
/// - –ß–∏—Ç–∞–µ—Ç: WeaponSwitchEvent (from PlayerInputController)
/// - –ü–∏—à–µ—Ç: SwapActiveWeaponIntent
/// - Query: With<Player>
///
/// # Hotkeys
/// - Digit1-4 ‚Üí weapon slots (handled here)
/// - Digit5-9 ‚Üí consumable slots (handled in Phase 5)
pub fn process_player_weapon_switch(
    mut switch_events: EventReader<WeaponSwitchEvent>,
    mut intent_events: EventWriter<SwapActiveWeaponIntent>,
    player_query: Query<Entity, With<Player>>,
) {
    let Ok(player_entity) = player_query.single() else {
        return;
    };

    for event in switch_events.read() {
        // Guard: —Ç–æ–ª—å–∫–æ weapon slots (0-3)
        if event.slot_index > 3 {
            // Consumables slots (4-8) –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ Phase 5
            continue;
        }

        // Generate SwapActiveWeaponIntent –¥–ª—è player
        intent_events.send(SwapActiveWeaponIntent {
            entity: player_entity,
            target_slot: event.slot_index,
        });

        voidrun_simulation::log(&format!(
            "üîÑ Player weapon swap request ‚Üí slot {} (Digit{})",
            event.slot_index,
            event.slot_index + 1
        ));
    }
}
